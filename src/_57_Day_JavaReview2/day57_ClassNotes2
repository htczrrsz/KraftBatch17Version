11. Constructor       :  constructor name should be exact same name with the class name
                         every class must have a constructor
                         initialize the every single instance variable
                         used for creating objects
                         if we don't create a constructor, Java will create a default constructor
                         constructor will execute whenever you create an object
                         can be overloaded
                         this()   --> constructor in same class. --> must be in the first line --> only call one constructor
                         super()  --> can be used in child classes to call the parent's constructor


12. Class & Objects   :
                          Class    :  A blueprint / template (taslak) for objects
                                      where objects come from (objeleri classlardan olustururuz)
                                      you can create as many objects as you want from class


                          Objects  :  an instance of a class (class in bir ornegi)
                                      each object has its own memory (heap memory icinde yer ayriliyor obje olusturdugumuzda)


13. Static & Instance :
                          Static   :  one copy
                                      belong the class
                                      can be reached by className without creating an object



                          Instance :  multiple copy
                                      belong to the object


14. Import Statements :
                        Regular import : import packageInfo.classInfo;

                        Static import  : import static packageInfo.classInfo.staticMember;


15. Access Modifiers  :

                       public     : Accessible from anywhere

                       protected  : Accessible within same package
                                    also accessible to other packages if it's a subclass

                       default    : Accessible within same package. Not accessible from other packages

                       private    : Accessible within same class.



16. OOP Encapsulation :  Data Hiding by private access modifier
                         use public getter setter methods to access / read and write the data
                         Complete Control of Data


                         getter : read only, public instance method (static degil)
                                  return type is same with the private variable
                                  has no parameters

                         setter : write only, public instance method
                                  return type is void
                                  Passes a parameter (the new value of the private variable)


17. Inheritance       :  Is a Relationship between classes (Parent/Class - Base/Derived)
                         extends keyword
                         ClassB extends ClassA,
                         ClassC extends ClassB,
                         ClassD extends ClassC


                         Sub-class    : inherits the accessible variables and methods from superclass
                                        can also have its own variables and methods

                         Super-class  : inherits NOTHING from sub-class
                                        can contain common variables and common methods of all child classes
                                        can use polymorphism


                         A class can extend only one class // multiple inheritance is not allowed
                         A class can implement Multiple interfaces
                         Without inheritance abstraction and polymorphism is not possible !!!



18. Method Overriding :  Inheritance is required
                         different implementation to the method
                         must happen in child class
                         access modifier must be same or more visible


19. Final Keyword     :  fixed / unchangeable     (kisir olur, bir sinifi extends edemeyiz final class'a)

                       variable : can not be re-assign
                       method   : can not be overriden
                       class    : can not be inherited





